/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uploader;

import Clases.Cl_Cargar_Splash;
import Clases.Cl_Descargar_Instalador;
import Clases.unZip;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.URL;
import java.net.URLConnection;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author CONTABILIDAD 02
 */
public class frm_loader extends javax.swing.JFrame {

    Cl_Descargar_Instalador bajar = new Cl_Descargar_Instalador();
    Cl_Cargar_Splash hilo;
    Integer ver_actual;
    Integer ver_nueva;
    int act;

    public frm_loader() {
        initComponents();
        iniciar();
        hilo = new Cl_Cargar_Splash(getProgreso());
        hilo.start();
        hilo = null;
    }

    private void iniciar() {
        this.setResizable(false);
        setLocationRelativeTo(null);
    }

    private int leer_version_nueva() {
        int version_nueva = 0;
        //REVISAR SI EXISTE NUEVA VERSION
        try {
            URL url = new URL("http://www.lunasystemsperu.com/uploads_erpplus/version.txt");
            URLConnection uc = url.openConnection();
            uc.connect();
            //Creamos el objeto con el que vamos a leer
            BufferedReader in = new BufferedReader(new InputStreamReader(uc.getInputStream()));
            String inputLine;
            while ((inputLine = in.readLine()) != null) {
                version_nueva = Integer.parseInt(inputLine);
            }
            in.close();
            return version_nueva;
        } catch (Exception e) {
            System.out.println(e);
        }

        //ver_nueva = 1000;
        System.out.print("Version Nueva: " + ver_nueva + "\n");
        return version_nueva;
    }

    private int leer_version_actual() {
        Integer version_actual = 0;
        try {
            File Ffichero = new File("version.txt");

            /*Si existe el fichero*/
            if (Ffichero.exists()) {
                /*Abre un flujo de lectura a el fichero*/
                BufferedReader Flee = new BufferedReader(new FileReader(Ffichero));
                String Slinea;
                System.out.println("**********Leyendo Fichero***********");
                /*Lee el fichero linea a linea hasta llegar a la ultima*/
                while ((Slinea = Flee.readLine()) != null) {
                    /*Imprime la linea leida*/
                    version_actual = Integer.parseInt(Slinea);
                    // System.out.println(Slinea);                
                }
                System.out.println("*********Fin Leer Fichero**********");
                /*Cierra el flujo*/
                Flee.close();
                //return txt_alm;
            } else {
                System.out.println("Fichero No Existe");
            }
        } catch (IOException ex) {
            /*Captura un posible error y le imprime en pantalla*/
            System.out.println(ex.getMessage());
        }
        System.out.println("Version actual  " + version_actual + "\n");
        return version_actual;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        progreso = new javax.swing.JProgressBar();
        msg = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        progreso.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                progresoStateChanged(evt);
            }
        });
        getContentPane().add(progreso, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 400, 30));

        msg.setForeground(new java.awt.Color(255, 255, 255));
        msg.setText("Cargando Aplicacion");
        getContentPane().add(msg, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/splash_erp.png"))); // NOI18N
        jLabel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 210));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void progresoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_progresoStateChanged

       if (progreso.getValue() == 1) {
            ver_actual = leer_version_actual();
            System.out.println("ver_actual " + ver_actual);
            msg.setText("Cargando Datos Principales");
        }

        if (progreso.getValue() == 20) {
            ver_nueva = leer_version_nueva();
            System.out.println("ver_nueva " + ver_nueva);
            msg.setText("Buscando Actualizaciones");
        }

        if (progreso.getValue() == 40) {
            if (ver_actual < ver_nueva) {
                act = 1;
                msg.setText("Cargando Modulos ++++");
            } else {
                act = 0;
                msg.setText("Cargando Modulos ----");
            }

        }

        if (progreso.getValue() == 60) {
            if (act == 1) {
                System.out.println("descargando actualizacion");
                for (int i = ver_actual + 1; i <= ver_nueva; i++) {
                    String version = i + "";
                    bajar.down(version);
                }

                System.out.println("cargando actualizaciones");
                for (int i = ver_actual + 1; i <= ver_nueva; i++) {
                    System.out.println("version nueva " + i);

                    String imput = "uploads/" + i + ".zip";
                    String workingDir = System.getProperty("user.dir");
                    System.out.println("Current working directory : " + workingDir);

                    String output = workingDir;

                    unZip unZip = new unZip();
                    try {
                        unZip.unZipIt(imput, output);
                    } catch (Exception e) {
                        System.out.println(e);
                    }

                    System.out.println("version instalada" + i + "\n");
                    File fichero = new File("uploads/" + i + ".zip");
                    if (fichero.delete()) {
                        System.out.println("El fichero ha sido borrado satisfactoriamente");
                    } else {
                        System.out.println("El fichero no puede ser borrado");
                    }
                }
            }

        }

        if (progreso.getValue() == 100) {
           try {
               Runtime.getRuntime().exec("java -jar erp_metalmecanica.jar");
               this.dispose();
           } catch (IOException ex) {
               Logger.getLogger(frm_loader.class.getName()).log(Level.SEVERE, null, ex);
           }
        }

    }//GEN-LAST:event_progresoStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_loader.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_loader.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_loader.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_loader.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_loader().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    public static javax.swing.JLabel msg;
    private javax.swing.JProgressBar progreso;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the progreso
     */
    public javax.swing.JProgressBar getProgreso() {
        return progreso;
    }

    /**
     * @param progreso the progreso to set
     */
    public void setProgreso(javax.swing.JProgressBar progreso) {
        this.progreso = progreso;
    }
}
